{
  "contractName": "BEP20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/BEP20.sol\":{\"keccak256\":\"0x372d9d22924b00e1aaaf5299488d8bd75435a0b47ed0e901cb232e4933fb6c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b44a61da27f8c33131a7376e5475e49fe1546ca6df2a22d6d8202724ad0bbed\",\"dweb:/ipfs/QmR8ReWGQScJ4k9YTsCwCmwRdqTM72JGoB2Hez93KfeNsd\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102cb806100206000396000f3fe60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906101c8565b610105565b6040516100789190610223565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a3919061023e565b61010d565b6040516100b5919061027a565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e091906101c8565b610125565b6040516100f29190610223565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015f82610134565b9050919050565b61016f81610154565b811461017a57600080fd5b50565b60008135905061018c81610166565b92915050565b6000819050919050565b6101a581610192565b81146101b057600080fd5b50565b6000813590506101c28161019c565b92915050565b600080604083850312156101df576101de61012f565b5b60006101ed8582860161017d565b92505060206101fe858286016101b3565b9150509250929050565b60008115159050919050565b61021d81610208565b82525050565b60006020820190506102386000830184610214565b92915050565b6000602082840312156102545761025361012f565b5b60006102628482850161017d565b91505092915050565b61027481610192565b82525050565b600060208201905061028f600083018461026b565b9291505056fea2646970667358221220cb5a6b56d941a34bcade42f6353a6f8fa40faee5138bfe3de69bcd099025e57d64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906101c8565b610105565b6040516100789190610223565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a3919061023e565b61010d565b6040516100b5919061027a565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e091906101c8565b610125565b6040516100f29190610223565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015f82610134565b9050919050565b61016f81610154565b811461017a57600080fd5b50565b60008135905061018c81610166565b92915050565b6000819050919050565b6101a581610192565b81146101b057600080fd5b50565b6000813590506101c28161019c565b92915050565b600080604083850312156101df576101de61012f565b5b60006101ed8582860161017d565b92505060206101fe858286016101b3565b9150509250929050565b60008115159050919050565b61021d81610208565b82525050565b60006020820190506102386000830184610214565b92915050565b6000602082840312156102545761025361012f565b5b60006102628482850161017d565b91505092915050565b61027481610192565b82525050565b600060208201905061028f600083018461026b565b9291505056fea2646970667358221220cb5a6b56d941a34bcade42f6353a6f8fa40faee5138bfe3de69bcd099025e57d64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2788:40",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:40",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:40",
                "type": ""
              }
            ],
            "src": "7:75:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:40",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:40"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:40",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:40"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:40",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:40",
                "type": ""
              }
            ],
            "src": "334:126:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:40",
                "type": ""
              }
            ],
            "src": "466:96:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:40"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:40"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:40"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:40",
                "type": ""
              }
            ],
            "src": "568:122:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:40"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:40",
                "type": ""
              }
            ],
            "src": "696:139:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:40",
                "type": ""
              }
            ],
            "src": "841:77:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:40"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:40"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:40"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:40",
                "type": ""
              }
            ],
            "src": "924:122:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:40"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:40",
                "type": ""
              }
            ],
            "src": "1052:139:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1280:391:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1326:83:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1328:77:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:79:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:79:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1310:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1297:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1322:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1293:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "1290:119:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:117:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:15:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:1:40",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1463:63:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1498:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1509:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1518:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1473:20:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:53:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1463:6:40"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1546:118:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1561:16:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:40",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1565:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1591:63:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1626:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1637:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1622:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1646:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1601:20:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1601:53:40"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1591:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1242:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1253:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1265:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1273:6:40",
                "type": ""
              }
            ],
            "src": "1197:474:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1719:48:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1729:32:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1754:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1747:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1747:13:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1740:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1740:21:40"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1729:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1701:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1711:7:40",
                "type": ""
              }
            ],
            "src": "1677:90:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1832:50:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1849:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1869:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1854:14:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:21:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:34:40"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1820:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1827:3:40",
                "type": ""
              }
            ],
            "src": "1773:109:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1980:118:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1990:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2002:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2013:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1998:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1998:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1990:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2064:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2077:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2088:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2073:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2073:17:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2026:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2026:65:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2026:65:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1952:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1964:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1975:4:40",
                "type": ""
              }
            ],
            "src": "1888:210:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2170:263:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2216:83:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2218:77:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2218:79:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2218:79:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2191:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2200:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2187:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2187:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2212:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2183:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2183:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "2180:119:40"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2309:117:40",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2324:15:40",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2338:1:40",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2328:6:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2353:63:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2388:9:40"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2399:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2384:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2384:22:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2408:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2363:20:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2363:53:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2353:6:40"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2140:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2151:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2163:6:40",
                "type": ""
              }
            ],
            "src": "2104:329:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2504:53:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2521:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2544:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2526:17:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2526:24:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2514:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2514:37:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2514:37:40"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2492:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2499:3:40",
                "type": ""
              }
            ],
            "src": "2439:118:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2661:124:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2671:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2683:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2694:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2679:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2671:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2751:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2764:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2775:1:40",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2760:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2760:17:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2707:43:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2707:71:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2707:71:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2633:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2645:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2656:4:40",
                "type": ""
              }
            ],
            "src": "2563:222:40"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 40,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "95:953:24:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "95:953:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:74;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;119:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;977:68;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:36;;;:::i;:::-;;817:74;883:4;817:74;;;;:::o;119:43::-;;;;;;;;;;;;;;;;;:::o;977:68::-;1037:4;977:68;;;;:::o;933:36::-;:::o;88:117:40:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:329::-;2163:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:119;;;2218:79;;:::i;:::-;2180:119;2338:1;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2309:117;2104:329;;;;:::o;2439:118::-;2526:24;2544:5;2526:24;:::i;:::-;2521:3;2514:37;2439:118;;:::o;2563:222::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2707:71;2775:1;2764:9;2760:17;2751:6;2707:71;:::i;:::-;2563:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract BEP20 {\r\n\r\n    mapping (address => uint) public  balanceOf;\r\n    /**\r\n    * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n    *\r\n    * Returns a boolean value indicating whether the operation succeeded.\r\n    *\r\n    * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n    * that someone may use both the old and the new allowance by unfortunate\r\n    * transaction ordering. One possible solution to mitigate this race\r\n    * condition is to first reduce the spender's allowance to 0 and set the\r\n    * desired value afterwards:\r\n    * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    *\r\n    * Emits an {Approval} event.\r\n    */\r\n    function approve(address spender, uint256 amount) public returns (bool) {}\r\n\r\n    // funds goes as `msg.value`\r\n    function deposit() public payable {}\r\n\r\n    function transfer(address dst, uint amount) public returns (bool) {}\r\n}",
  "sourcePath": "D:\\CSDN\\github\\SmartBet\\contracts\\BEP20.sol",
  "ast": {
    "absolutePath": "project:/contracts/BEP20.sol",
    "exportedSymbols": {
      "BEP20": [
        4325
      ]
    },
    "id": 4326,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4294,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:24"
      },
      {
        "id": 4295,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:24"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BEP20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4325,
        "linearizedBaseContracts": [
          4325
        ],
        "name": "BEP20",
        "nameLocation": "104:5:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 4299,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "153:9:24",
            "nodeType": "VariableDeclaration",
            "scope": 4325,
            "src": "119:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4298,
              "keyType": {
                "id": 4296,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "119:25:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4297,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "139:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4309,
              "nodeType": "Block",
              "src": "889:2:24",
              "statements": []
            },
            "documentation": {
              "id": 4300,
              "nodeType": "StructuredDocumentation",
              "src": "169:642:24",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 4310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "826:7:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4302,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "842:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "834:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4304,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "859:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "851:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:33:24"
            },
            "returnParameters": {
              "id": 4308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "883:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "882:6:24"
            },
            "scope": 4325,
            "src": "817:74:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4313,
              "nodeType": "Block",
              "src": "967:2:24",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 4314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "942:7:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "949:2:24"
            },
            "returnParameters": {
              "id": 4312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:24"
            },
            "scope": 4325,
            "src": "933:36:24",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4323,
              "nodeType": "Block",
              "src": "1043:2:24",
              "statements": []
            },
            "functionSelector": "a9059cbb",
            "id": 4324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "986:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4316,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "1003:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "995:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4318,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1013:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "1008:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4317,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:26:24"
            },
            "returnParameters": {
              "id": 4322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "1037:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:6:24"
            },
            "scope": 4325,
            "src": "977:68:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4326,
        "src": "95:953:24",
        "usedErrors": []
      }
    ],
    "src": "33:1015:24"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/BEP20.sol",
    "exportedSymbols": {
      "BEP20": [
        4325
      ]
    },
    "id": 4326,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4294,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:24"
      },
      {
        "id": 4295,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:24"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BEP20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4325,
        "linearizedBaseContracts": [
          4325
        ],
        "name": "BEP20",
        "nameLocation": "104:5:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 4299,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "153:9:24",
            "nodeType": "VariableDeclaration",
            "scope": 4325,
            "src": "119:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4298,
              "keyType": {
                "id": 4296,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "128:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "119:25:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4297,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "139:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4309,
              "nodeType": "Block",
              "src": "889:2:24",
              "statements": []
            },
            "documentation": {
              "id": 4300,
              "nodeType": "StructuredDocumentation",
              "src": "169:642:24",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 4310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "826:7:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4302,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "842:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "834:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4304,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "859:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "851:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:33:24"
            },
            "returnParameters": {
              "id": 4308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "883:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "882:6:24"
            },
            "scope": 4325,
            "src": "817:74:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4313,
              "nodeType": "Block",
              "src": "967:2:24",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 4314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "942:7:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "949:2:24"
            },
            "returnParameters": {
              "id": 4312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "967:0:24"
            },
            "scope": 4325,
            "src": "933:36:24",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4323,
              "nodeType": "Block",
              "src": "1043:2:24",
              "statements": []
            },
            "functionSelector": "a9059cbb",
            "id": 4324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "986:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4316,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "1003:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "995:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4318,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1013:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "1008:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4317,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:26:24"
            },
            "returnParameters": {
              "id": 4322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "1037:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:6:24"
            },
            "scope": 4325,
            "src": "977:68:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4326,
        "src": "95:953:24",
        "usedErrors": []
      }
    ],
    "src": "33:1015:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-11-07T11:18:52.671Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}